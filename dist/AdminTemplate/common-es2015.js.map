{"version":3,"sources":["./src/app/core/common/url.constants.ts","./src/app/core/services/base-api-services/base-api-service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAO,MAAM,YAAY;;AACE,8BAAiB,GAAG,YAAY,CAAC;AACjC,6BAAgB,GAAG,YAAY,CAAC;;;;;;;;;;;;;;;;;;;;ACFhB;AACO;AAEgB;AAKlE,IAAa,cAAc,GAA3B,MAAa,cAAc;IACvB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IACzC,GAAG,CAAI,GAAW,EAAE,IAAU;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,qEAAW,CAAC,MAAM,GAAG,GAAG,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC,CAAC;IACtE,CAAC;IAED,IAAI,CAAI,GAAW,EAAE,IAAU;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,qEAAW,CAAC,MAAM,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC;IAC7D,CAAC;IACD,GAAG,CAAI,GAAW,EAAE,IAAU;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,qEAAW,CAAC,MAAM,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC;IAC5D,CAAC;IACD,MAAM,CAAI,GAAW,EAAE,GAAW,EAAE,EAAU;QAC1C,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,qEAAW,CAAC,MAAM,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;IACjF,CAAC;IACD,QAAQ,CAAI,GAAW,EAAE,IAAU;QAC/B,OAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,qEAAW,CAAC,MAAM,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC;IAC9D,CAAC;CAIJ;;YApB6B,+DAAU;;AAD3B,cAAc;IAH1B,gEAAU,CAAC;QACR,UAAU,EAAE,MAAM;KACnB,CAAC;GACS,cAAc,CAqB1B;AArB0B","file":"common-es2015.js","sourcesContent":["export class UrlConstants {\n    public static readonly API_GET_DASHBOARD = 'api/users?';\n    public static readonly API_GET_LOADDATA = 'api/users?';\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from \"rxjs\";\nimport { environment } from '../../../../environments/environment'\n\n@Injectable({\n    providedIn: 'root'\n  })\nexport class BaseApiService {\n    constructor(private http: HttpClient) { }\n    get<T>(uri: string, data?: any): Observable<T> {\n        return this.http.get<T>(environment.apiUrl + uri, {params: data});\n    }\n\n    post<T>(uri: string, data?: any): Observable<T> {\n        return this.http.post<T>(environment.apiUrl + uri, data);\n    }\n    put<T>(uri: string, data?: any): Observable<T> {\n        return this.http.put<T>(environment.apiUrl + uri, data);\n    }\n    delete<T>(uri: string, key: string, id: string): Observable<T> {\n        return this.http.delete<T>(environment.apiUrl + uri + \"/?\" + key + \"=\" + id);\n    }\n    postFile<T>(uri: string, data?: any): Observable<T> {\n        return  this.http.post<T>(environment.apiUrl + uri, data);\n    }\n    // forkJoin(arrObserbales) {\n    //     return Observable.forkJoin(arrObserbales);\n    // }\n}\n"],"sourceRoot":"webpack:///"}