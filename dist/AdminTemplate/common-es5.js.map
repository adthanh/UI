{"version":3,"sources":["src/app/core/common/url.constants.ts","src/app/core/services/base-api-services/base-api-service.ts"],"names":[],"mappings":";;yeAAa,CAAA,Y,2BACc,YAAA,CAAA,iBAAA,CAAoB,YAApB,CACA,YAAA,CAAA,gBAAA,CAAmB,YAAnB,C;;ihCCM3B,GAAa,CAAA,cAAb,yBACI,wBAAoB,IAApB,CAAoC,CAAhB,KAAA,IAAA,CAAA,IAAqB,CAD7C,2CAEI,GAFJ,CAEI,aAAO,GAAP,CAAoB,IAApB,CAA8B,CAC1B,MAAO,MAAK,IAAL,CAAU,GAAV,CAAiB,sDAAA,CAAA,aAAA,CAAA,CAAY,MAAZ,CAAqB,GAAtC,CAA2C,CAAC,MAAM,CAAE,IAAT,CAA3C,CACV,CAJL,QAMI,IANJ,CAMI,cAAQ,GAAR,CAAqB,IAArB,CAA+B,CAC3B,MAAO,MAAK,IAAL,CAAU,IAAV,CAAkB,sDAAA,CAAA,aAAA,CAAA,CAAY,MAAZ,CAAqB,GAAvC,CAA4C,IAA5C,CACV,CARL,QASI,GATJ,CASI,aAAO,GAAP,CAAoB,IAApB,CAA8B,CAC1B,MAAO,MAAK,IAAL,CAAU,GAAV,CAAiB,sDAAA,CAAA,aAAA,CAAA,CAAY,MAAZ,CAAqB,GAAtC,CAA2C,IAA3C,CACV,CAXL,QAYI,MAZJ,CAYI,iBAAU,GAAV,CAAuB,GAAvB,CAAoC,EAApC,CAA8C,CAC1C,MAAO,MAAK,IAAL,CAAU,MAAV,CAAoB,sDAAA,CAAA,aAAA,CAAA,CAAY,MAAZ,CAAqB,GAArB,CAA2B,IAA3B,CAAkC,GAAlC,CAAwC,GAAxC,CAA8C,EAAlE,CACV,CAdL,QAeI,QAfJ,CAeI,kBAAY,GAAZ,CAAyB,IAAzB,CAAmC,CAC/B,MAAQ,MAAK,IAAL,CAAU,IAAV,CAAkB,sDAAA,CAAA,aAAA,CAAA,CAAY,MAAZ,CAAqB,GAAvC,CAA4C,IAA5C,CACX,CAjBL,yBAAA,C,sDAC8B,iDAAA,CAAA,YAAA,C,IADjB,cAAc,CAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAH1B,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW,CACR,UAAU,CAAE,MADJ,CAAX,CAG0B,CAAA,CAAd,cAAc,CAAd,C","sourcesContent":["export class UrlConstants {\n    public static readonly API_GET_DASHBOARD = 'api/users?';\n    public static readonly API_GET_LOADDATA = 'api/users?';\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from \"rxjs\";\nimport { environment } from '../../../../environments/environment'\n\n@Injectable({\n    providedIn: 'root'\n  })\nexport class BaseApiService {\n    constructor(private http: HttpClient) { }\n    get<T>(uri: string, data?: any): Observable<T> {\n        return this.http.get<T>(environment.apiUrl + uri, {params: data});\n    }\n\n    post<T>(uri: string, data?: any): Observable<T> {\n        return this.http.post<T>(environment.apiUrl + uri, data);\n    }\n    put<T>(uri: string, data?: any): Observable<T> {\n        return this.http.put<T>(environment.apiUrl + uri, data);\n    }\n    delete<T>(uri: string, key: string, id: string): Observable<T> {\n        return this.http.delete<T>(environment.apiUrl + uri + \"/?\" + key + \"=\" + id);\n    }\n    postFile<T>(uri: string, data?: any): Observable<T> {\n        return  this.http.post<T>(environment.apiUrl + uri, data);\n    }\n    // forkJoin(arrObserbales) {\n    //     return Observable.forkJoin(arrObserbales);\n    // }\n}\n"],"sourceRoot":"webpack:///"}